/* expression-rule-engine v0.1.0 (https://github.com/parripandian/expression-rule-engine#readme) */
!function(){"use strict";function setOptions(a){_.forEach(a,function(a,b){engineRuleOptions.hasOwnProperty(b)&&(engineRuleOptions[b]=a)})}function getOptions(){return engineRuleOptions}function isValidExpression(a){var b=!0;engineRuleOptions.replaceVariablePrefix&&(a=a.replace(new RegExp(engineRuleOptions.variablePrefix,"g"),engineRuleOptions.variablePrefixReplacement));try{JavaScriptExpressionParser(a)}catch(a){b=!1}return b}function convertToExpressionTree(a){var b=!0,c={},d={},e=[],f=a;engineRuleOptions.replaceVariablePrefix&&(f=f.replace(new RegExp(engineRuleOptions.variablePrefix,"g"),engineRuleOptions.variablePrefixReplacement));try{c=JavaScriptExpressionParser(f)}catch(a){d=a,b=!1}return a===f&&(f=""),b&&(e=extractVariables(c)),{validExpression:b,expression:a,modifiedExpression:f,expressionTree:c,variables:e,hasVariable:e.length>0,error:d}}function extractVariables(a){var b=[];return parseVariables(a,b,!1),b}function parseVariables(a,b,c){return c&&b.length>0?b:void(_.isObject(a)&&_.forEach(a,function(d,e){"type"===e?"Identifier"===d&&(engineRuleOptions.replaceVariablePrefix&&!_.isEmpty(engineRuleOptions.variablePrefixReplacement)?b.push(a.name.replace(new RegExp(engineRuleOptions.variablePrefixReplacement,"g"),engineRuleOptions.variablePrefix)):b.push(a.name)):_.isArray(d)?_.forEach(d,function(a,d){parseVariables(a,b,c)}):_.isObject(d)&&parseVariables(d,b,c)}))}function evaluateExpression(a,b){var c={},d=convertToExpressionTree(a);return d.validExpression?(c=evaluateExpressionTree(d.expressionTree,b),c.expression=a,c.validExpression=d.validExpression):c={expression:a,validExpression:d.validExpression},c}function evaluateExpressionTree(expressionTree,variableValues){replaceVariables(expressionTree,variableValues);var replacedExpression=JavaScriptExpressionBuilder(expressionTree),evaluatedValue="",error={occurred:!1,message:""};try{evaluatedValue=eval(replacedExpression)}catch(a){error={occurred:!0,message:a.message}}return{replacedExpression:replacedExpression,evaluatedValue:evaluatedValue,error:error}}function replaceVariables(a,b){var c="",d="";_.isObject(a)&&_.forEach(a,function(e,f){"type"===f?"Identifier"===e&&(engineRuleOptions.replaceVariablePrefix?(d=a.name.replace(engineRuleOptions.variablePrefixReplacement,""),c=b[d]):c=b[a.name],_.isNumber(c)?a.name=c:_.isString(c)?a.name='"'+c+'"':_.isBoolean(c)&&(a.name=c)):_.isArray(e)?_.forEach(e,function(a,c){replaceVariables(a,b)}):_.isObject(e)&&replaceVariables(e,b)})}module.exports={setOptions:setOptions,getOptions:getOptions,isValidExpression:isValidExpression,convertExpressionToExpressionTree:convertToExpressionTree,evaluateExpression:evaluateExpression};var JavaScriptExpressionParser=require("jsep"),JavaScriptExpressionBuilder=require("jseb"),_=require("lodash"),engineRuleOptions={replaceVariablePrefix:!1,variablePrefix:"",variablePrefixReplacement:""}}();
//# sourceMappingURL=expression-rule-engine.min.js.map